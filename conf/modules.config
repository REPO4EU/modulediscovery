/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Module detection

    withName: DOMINO_DOMINO {
        ext.args = "-v false"
    }

    withName: ROBUST {
        ext.args = "0.25 0.9 30 0.1"
    }

    withName: ROBUSTBIASAWARE {
        ext.args = "--alpha 0.25 --beta 0.9 --n 30 --tau 0.1 --gamma 1.0"
    }

    withName: RWR {
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : "${seeds.baseName}." + filename }
        ]
    }


    withName: "MODULEPARSER|FIRSTNEIGHBOR" {
        publishDir = [
            path: params.outdir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : "modules/gt/${filename}" },
            pattern: "*.gt"
        ]
    }

    withName: SAVEMODULES {
        publishDir = [
            path: params.outdir,
            mode: params.publish_dir_mode,
            saveAs: { filename ->
                filename.endsWith('.graphml') ? "modules/graphml/${filename}" :
                filename.endsWith('.nodes.tsv') ? "modules/nodes_tsv/${filename}" :
                filename.endsWith('.edges.tsv') ? "modules/edges_tsv/${filename}" :
                filename.endsWith('.pdf') ? "modules/pdf/${filename}" :
                filename.endsWith('.png') ? "modules/png/${filename}" :
                filename.endsWith('.svg') ? "modules/svg/${filename}" :
                null
            }
        ]
    }




    // Evaluation

    withName: GT2TSV {
        publishDir = [
            path: { "${params.outdir}/tsv" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'GPROFILER2_GOST' {
        ext.args = { "--organism hsapiens --sources \"GO,WP,REAC,KEGG\"" }
    }

}
