/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Input parsing

    withName: GRAPHTOOLPARSER {
        publishDir = [
            path: { "${params.outdir}/input/networks" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

        withName: INPUTCHECK {
        publishDir = [
            path: { "${params.outdir}/input/seeds" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Module detection

    withName: DOMINO_DOMINO {
        ext.args = "-v false"
    }

    withName: ROBUST {
        ext.args = "0.25 0.9 30 0.1"
    }

    withName: ROBUSTBIASAWARE {
        ext.args = "--alpha 0.25 --beta 0.9 --n 30 --tau 0.1 --gamma 1.0"
    }

    withName: "NETWORKANNOTATION" {
        publishDir = [
            path: { "${params.outdir}/modules/gt" },
            mode: params.publish_dir_mode,
            pattern: "*.gt"
        ]
    }

    withName: SAVEMODULES {
        publishDir = [
            path: { "${params.outdir}/modules" },
            mode: params.publish_dir_mode,
            saveAs: { filename ->
                filename.endsWith('.graphml') ? "graphml/${filename}" :
                filename.endsWith('.nodes.tsv') ? "tsv_nodes/${filename}" :
                filename.endsWith('.edges.tsv') ? "tsv_edges/${filename}" :
                null
            }
        ]
    }

    withName: VISUALIZEMODULES {
        publishDir = [
            path: { "${params.outdir}/modules_visualized" },
            mode: params.publish_dir_mode,
            saveAs: { filename ->
                filename.endsWith('.pdf') ? "pdf/${filename}" :
                filename.endsWith('.png') ? "png/${filename}" :
                filename.endsWith('.svg') ? "svg/${filename}" :
                filename.endsWith('.html') ? "html/${filename}" :
                null
            }
        ]
    }

    // Drug prioritization
    withName: SHORTEST_PATHS {
        publishDir = [
            path: { "${params.outdir}/shortest_paths" },
            mode: params.publish_dir_mode,
            pattern: "*.{pickle,pkl,pck,pcl}"
        ]
    }
    withName: PROXIMITY {
        publishDir = [
            path: { "${params.outdir}/drug_prioritization/proximity" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv,txt}"
        ]
    }

    // Annotation

    withName: BIOPAX_PARSER {
        publishDir = [
            path: { "${params.outdir}/modules/biopax" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

        withName: BIOPAX_VALIDATOR {
        publishDir = [
            path: { "${params.outdir}/reports" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    // Evaluation

    withName: 'GPROFILER2_GOST' {
        ext.args = { "--organism hsapiens --sources \"GO,WP,REAC,KEGG\"" }
        publishDir = [
            path: { "${params.outdir}/evaluation/gprofiler/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'DIGEST' {
        publishDir = [
            path: { "${params.outdir}/evaluation/digest" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Drug predictions

    withName: 'DRUGPREDICTIONS' {
        publishDir = [
            path: { "${params.outdir}/drugstone" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: SEEDPERMUTATION {
        publishDir = [enabled: false]
    }

    withName: '.*:GT_SEEDPERMUTATION:NETWORKEXPANSION.*' {
        publishDir = [enabled: false]
    }

    withName: 'PERMUTATIONEVALUATION' {
        publishDir = [
            path: { "${params.outdir}/evaluation/seed_permutation/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }



}
