{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/REPO4EU/modulediscovery/master/nextflow_schema.json",
    "title": "REPO4EU/modulediscovery pipeline parameters",
    "description": "A pipeline for network-based disease module identification",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "description": "Path to a CSV sample sheet defining seed file-network combinations",
                    "help_text": "The file must have a header and can have two columns: \"seeds\" and \"network\". If either \"seeds\" or \"network\" are missing, the --seeds and --network parameters are expected as replacement. ",
                    "fa_icon": "fas fa-file-csv",
                    "pattern": "^\\S+\\.csv$",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "schema": "/assets/schema_input.json"
                },
                "seeds": {
                    "type": "string",
                    "fa_icon": "fas fa-file-csv",
                    "description": "Path(s) to one or multiple file(s) with seed genes",
                    "help_text": "Multiple files have to be \",\" separated. Each file must have one line per seed gene. This parameter cannot be set, if there is a \"seeds\" column, in the sample sheet provided via --input."
                },
                "network": {
                    "type": "string",
                    "description": "Path(s) to one or multiple PPI network(s) in gt, csv, graphml, xml, dot, or gml format.",
                    "format": "file-path",
                    "fa_icon": "fas fa-file-csv",
                    "pattern": "^\\S+.[csv|gt|graphml|xml|dot|gml]$",
                    "help_text": "Multiple files have to be \",\" separated."
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "network_expansion": {
            "title": "Network expansion",
            "type": "object",
            "description": "Parameters for the network expansion algorithms.",
            "default": "",
            "fa_icon": "fas fa-project-diagram",
            "properties": {
                "skip_firstneighbor": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Flag for skipping first neighbor"
                },
                "skip_domino": {
                    "type": "boolean",
                    "description": "Flag for skipping DOMINO",
                    "fa_icon": "fas fa-forward"
                },
                "skip_robust": {
                    "type": "boolean",
                    "description": "Flag for skipping Robust",
                    "fa_icon": "fas fa-forward"
                },
                "skip_robust_bias_aware": {
                    "type": "boolean",
                    "description": "Flag for skipping Robust-bias-aware",
                    "fa_icon": "fas fa-forward"
                },
                "skip_diamond": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Flag for skipping DIAMOnD"
                },
                "diamond_n": {
                    "type": "integer",
                    "default": 200,
                    "description": "Desired number of DIAMOnD genes.",
                    "fa_icon": "far fa-gem"
                },
                "diamond_alpha": {
                    "type": "integer",
                    "default": 1,
                    "description": "Weight of the seeds.",
                    "fa_icon": "far fa-gem"
                },
                "skip_rwr": {
                    "type": "boolean",
                    "description": "Flag for skipping random walk with restart",
                    "fa_icon": "fas fa-forward"
                },
                "rwr_scaling": {
                    "type": "boolean",
                    "description": "Add a scaling depending on the node's degree.",
                    "fa_icon": "fas fa-walking"
                },
                "rwr_symmetrical": {
                    "type": "boolean",
                    "description": "Compute the symmetric instead of column-wise normalized Markov matrix.",
                    "fa_icon": "fas fa-walking"
                },
                "rwr_r": {
                    "type": "number",
                    "description": "Damping factor/restart probability.",
                    "default": 0.8,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-walking"
                }
            }
        },
        "visualization": {
            "title": "Visualization",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-palette",
            "properties": {
                "skip_visualization": {
                    "type": "boolean",
                    "description": "Skip module visualization",
                    "fa_icon": "fas fa-forward"
                },
                "visualization_max_nodes": {
                    "type": "integer",
                    "default": 500,
                    "description": "If a module has more nodes it will not be visualized.",
                    "fa_icon": "fas fa-project-diagram"
                }
            }
        },
        "annotation": {
            "title": "Annotation",
            "type": "object",
            "description": "Set parameters regarding the annotation.",
            "default": "",
            "properties": {
                "skip_annotation": {
                    "type": "boolean",
                    "description": "Flag for skipping the annotation part of the process.",
                    "fa_icon": "fas fa-forward"
                },
                "id_space": {
                    "type": "string",
                    "enum": ["entrez", "uniprot"],
                    "default": "entrez",
                    "description": "Either give graph with enter ids or uniprot ids.",
                    "fa_icon": "fas fa-fingerprint"
                },
                "validate_online": {
                    "type": "boolean",
                    "help_text": "Flag for running the BioPAX validator client, i.e. validating at the baderlab server. If \"false\" will load OBO files locally, which can take some time but is recommended for files > 100Mb.",
                    "description": "Flag for validating online at baderlab.org.",
                    "fa_icon": "fas fa-globe"
                },
                "add_variants": {
                    "type": "boolean",
                    "description": "Flag for adding variants to the biopax annotation file.",
                    "fa_icon": "fas fa-dna"
                }
            },
            "fa_icon": "far fa-edit"
        },
        "drug_prioritization": {
            "title": "Drug prioritization",
            "type": "object",
            "description": "Parameters for the drug prioritization methods.",
            "default": "",
            "fa_icon": "fas fa-chart-network",
            "properties": {
                "run_proximity": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Flag for running proximity"
                },
                "shortest_paths": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Local path to the shortest path pickle file used for proximity.",
                    "hidden": true
                },
                "drug_to_target": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Local path to the drug to targets file used for proximity.",
                    "hidden": true
                }
            }
        },
        "drug_predictions": {
            "title": "Drug predictions",
            "type": "object",
            "description": "Parameters for the drug predictions.",
            "default": "",
            "properties": {
                "skip_drug_predictions": {
                    "type": "boolean",
                    "description": "Flag for skipping drug predictions",
                    "fa_icon": "fas fa-forward"
                },
                "includeIndirectDrugs": {
                    "type": "boolean",
                    "description": "Drugst.One parameter for including indirect drugs.",
                    "fa_icon": "fas fa-capsules"
                },
                "includeNonApprovedDrugs": {
                    "type": "boolean",
                    "description": "Drugst.One parameter for including non approved drugs.",
                    "fa_icon": "fas fa-capsules"
                },
                "result_size": {
                    "type": "integer",
                    "default": 50,
                    "description": "Drugst.One parameter for defining  the maximum number of returned drugs.",
                    "fa_icon": "fas fa-expand-arrows-alt"
                },
                "drugstone_algorithms": {
                    "type": "string",
                    "description": "Parameter for defining the Drugst.One algorithms to be used. Comma separated list. Options: 'trustrank', 'degree' and 'closeness'.",
                    "default": "trustrank"
                }
            },
            "fa_icon": "fas fa-capsules"
        },
        "evaluation": {
            "title": "Evaluation",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-search",
            "properties": {
                "skip_evaluation": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Flag skipping the entire evaluation workflow"
                },
                "skip_gprofiler": {
                    "type": "boolean",
                    "description": "Flag for skipping g:Profiler",
                    "fa_icon": "fas fa-forward"
                },
                "skip_digest": {
                    "type": "boolean",
                    "description": "Flag for skipping DIGEST",
                    "fa_icon": "fas fa-forward"
                },
                "skip_seed_permutation": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Flag for skipping the seed permutation-based evaluation"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },

        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/network_expansion"
        },
        {
            "$ref": "#/$defs/visualization"
        },
        {
            "$ref": "#/$defs/annotation"
        },
        {
            "$ref": "#/$defs/drug_predictions"
        },
        {
            "$ref": "#/$defs/drug_prioritization"
        },
        {
            "$ref": "#/$defs/evaluation"
        },
        {
            "$ref": "#/$defs/drug_prioritization"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ],
    "properties": {
        "skip_network_permutation": {
            "type": "boolean"
        },
        "n_network_permutations": {
            "type": "integer",
            "default": 1000
        },
        "permuted_networks": {
            "type": "string"
        }
    }
}
